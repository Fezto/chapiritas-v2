name: 🚀 Deploy Chacharitas API

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      # Fija el socket para que ssh-agent lo use
      SSH_AUTH_SOCK: /tmp/ssh_agent.sock

    steps:
      # 1) Checkout de tu código
      - name: Checkout code
        uses: actions/checkout@v4

      # 2) Iniciar ssh-agent y cargar tu clave con passphrase
      - name: Setup SSH agent with passphrase
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          # Inicia el agente en el socket definido
          ssh-agent -a "$SSH_AUTH_SOCK" > /dev/null

          # Crea un pequeño helper que devuelva la passphrase
          echo 'echo $SSH_PASSPHRASE' > ~/.ssh_askpass
          chmod +x ~/.ssh_askpass

          # Añade tu clave al agente usando SSH_ASKPASS
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' \
            | DISPLAY=none SSH_ASKPASS=~/.ssh_askpass ssh-add - > /dev/null

          # Comprueba que quedó cargada
          ssh-add -l

          # Guarda la huella de tu host para no preguntar luego
          mkdir -p ~/.ssh
          ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts

      # 3) Conectar por SSH y desplegar
      - name: SSH Deploy
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << 'EOF'
            set -e
            cd /root/chacharitas-api
            git fetch --all
            git reset --hard origin/main
            source .venv/bin/activate
            pip install --upgrade -r requirements.txt
            systemctl restart chacharitas-api.service
            nginx -t && systemctl reload nginx
          EOF
